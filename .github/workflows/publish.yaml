name: Build and Publish to Jetbrains Marketplace

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/gradle.properties
            ~/gradlew
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'jetbrains'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build plugin
        run: ./gradlew build

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/gradle.properties
            ~/gradlew
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'jetbrains'
      - name: Run tests
        run: ./gradlew test

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/gradle.properties
            ~/gradlew
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'jetbrains'
      - name: Publish plugin to Jetbrains Marketplace
        run: ./gradlew publishPlugin
        env:
          CERTIFICATE_CHAIN: ${{ secrets.CCERTIFICATE_CHAIN }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PRIVATE_KEY_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
